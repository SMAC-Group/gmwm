% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{gen_qn}
\alias{gen_qn}
\title{Generate a Quantisation Noise (QN) sequence}
\usage{
gen_qn(N, q2 = 0.1)
}
\arguments{
\item{N}{An \code{integer} for signal length.}

\item{q2}{A \code{double} that contains autocorrection.}
}
\value{
A \code{vec} containing the QN process.
}
\description{
Generate an QN sequence given q2
}
\details{
To generate the quantisation noise, we follow this recipe:
First, we generate using a random uniform distribution:
\deqn{U_k^*\sim U\left[ {0,1} \right]}{U_k^*~U[0,1]}

Then, we multiple the sequence by \eqn{\sqrt{12}}{sqrt(12)} so:
\deqn{{U_k} = \sqrt{12} U_k^*}{U_k = sqrt(12)*U_k^*}

Next, we find the derivative of \eqn{{U_k}}{U_k}
\deqn{{{\dot U}_k} = \frac{{{U_{k + \Delta t}} - {U_k}}}{{\Delta t}}}{U_k^. = (U_(k + (delta)t) - U_k)}

In this case, we modify the derivative such that:
\eqn{{{\dot U}_k}\Delta t = {U_{k + \Delta t}} - {U_k}}{U_k^. * (delta)t = U_{k + (delta)*t} - U_k}

Thus, we end up with:
\deqn{{x_k} = \sqrt Q {{\dot U}_k}\Delta t}{x_k = sqrt(Q)*U_k^.*(delta)t}
\deqn{{x_k} = \sqrt Q \left( {{U_{k + 1}} - {U_k}} \right)}{x_k = sqrt(Q)* (U_(k+1) - U_(k))}
}
\examples{
gen_qn(10, 5)
}

